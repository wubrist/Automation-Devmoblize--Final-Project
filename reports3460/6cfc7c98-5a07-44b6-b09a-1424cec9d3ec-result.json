{"name": "test_cart_page_Card_NULL", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: Please fill out Name and Creditcard.\nMessage: unexpected alert open: {Alert text : Please fill out Name and Creditcard.}\n  (Session info: chrome=109.0.5414.120)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00266643]\n\t(No symbol) [0x001FBE21]\n\t(No symbol) [0x000FDA9D]\n\t(No symbol) [0x001673A5]\n\t(No symbol) [0x0014FB76]\n\t(No symbol) [0x001249C1]\n\t(No symbol) [0x00125E5D]\n\tGetHandleVerifier [0x004DA142+2497106]\n\tGetHandleVerifier [0x005085D3+2686691]\n\tGetHandleVerifier [0x0050BB9C+2700460]\n\tGetHandleVerifier [0x00313B10+635936]\n\t(No symbol) [0x00204A1F]\n\t(No symbol) [0x0020A418]\n\t(No symbol) [0x0020A505]\n\t(No symbol) [0x0021508B]\n\tBaseThreadInitThunk [0x7694FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x774E7BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x774E7B8E+238]\n\t(No symbol) [0x00000000]", "trace": "self = <Tests.test_cart.Test_Cart object at 0x000002CDC4570880>\n\n    @allure.description(\"test_cart_page_Card_NULL\")\n    @pytest.mark.sanity\n    def test_cart_page_Card_NULL(self):\n        test = Cart_page()\n>       test.test_cart_page_Card_NULL()\n\nTests\\test_cart.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPage_Test\\Cart_Page.py:159: in test_cart_page_Card_NULL\n    self.driver.find_element(By.XPATH, self.close).click()\n..\\..\\..\\Desktop\\my_project\\venv\\Demoblaze_Projects\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:830: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\Desktop\\my_project\\venv\\Demoblaze_Projects\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002CDC47BAE50>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"Please fill out Name and Creditcard.\"},\"error\":\"unexpected alert o...jectPath [0x774E7BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x774E7B8E+238]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: Please fill out Name and Creditcard.\nE           Message: unexpected alert open: {Alert text : Please fill out Name and Creditcard.}\nE             (Session info: chrome=109.0.5414.120)\nE           Stacktrace:\nE           Backtrace:\nE           \t(No symbol) [0x00266643]\nE           \t(No symbol) [0x001FBE21]\nE           \t(No symbol) [0x000FDA9D]\nE           \t(No symbol) [0x001673A5]\nE           \t(No symbol) [0x0014FB76]\nE           \t(No symbol) [0x001249C1]\nE           \t(No symbol) [0x00125E5D]\nE           \tGetHandleVerifier [0x004DA142+2497106]\nE           \tGetHandleVerifier [0x005085D3+2686691]\nE           \tGetHandleVerifier [0x0050BB9C+2700460]\nE           \tGetHandleVerifier [0x00313B10+635936]\nE           \t(No symbol) [0x00204A1F]\nE           \t(No symbol) [0x0020A418]\nE           \t(No symbol) [0x0020A505]\nE           \t(No symbol) [0x0021508B]\nE           \tBaseThreadInitThunk [0x7694FA29+25]\nE           \tRtlGetAppContainerNamedObjectPath [0x774E7BBE+286]\nE           \tRtlGetAppContainerNamedObjectPath [0x774E7B8E+238]\nE           \t(No symbol) [0x00000000]\n\n..\\..\\..\\Desktop\\my_project\\venv\\Demoblaze_Projects\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:244: UnexpectedAlertPresentException"}, "description": "test_cart_page_Card_NULL", "start": 1675330332617, "stop": 1675330364886, "uuid": "861bc638-d7ad-4a73-8a90-259a6975a22d", "historyId": "44a918c6c877bf676ce43e8fc869f8bb", "testCaseId": "7018831a9f84117b7ec77977c1c6d48a", "fullName": "Tests.test_cart.Test_Cart#test_cart_page_Card_NULL", "labels": [{"name": "tag", "value": "sanity"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_cart"}, {"name": "subSuite", "value": "Test_Cart"}, {"name": "host", "value": "LAPTOP-HGOMIVGU"}, {"name": "thread", "value": "4536-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_cart"}]}